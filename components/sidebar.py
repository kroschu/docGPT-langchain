import asyncio
import os

import streamlit as st

from docGPT import GPT4Free


def side_bar() -> None:
    with st.sidebar:
        with st.expander(':orange[How to use?]'):
            st.markdown(
                """
              1. –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—ñ –∫–ª—é—á—ñ API: (–í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—É –º–æ–¥–µ–ª—å `gpt4free` **–±–µ–∑ –∫–ª—é—á—ñ–≤ API**)
                                    * `OpenAI API Key`: –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —É –≤–∞—Å —â–µ –∑–∞–ª–∏—à–∏–≤—Å—è —Ç–µ—Ä–º—ñ–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
                                    * `SERPAPI API Key`: –ù–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ. –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–∞–¥–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ –≤–º—ñ—Å—Ç, —è–∫–∏–π –Ω–µ –∑'—è–≤–ª—è—î—Ç—å—Å—è –≤ PDF-–¥–æ–∫—É–º–µ–Ω—Ç—ñ, –≤–∞–º –∑–Ω–∞–¥–æ–±–∏—Ç—å—Å—è —Ü–µ–π –∫–ª—é—á.
                                2. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª **–î–æ–∫—É–º–µ–Ω—Ç** (–≤–∏–±–µ—Ä—ñ—Ç—å –æ–¥–∏–Ω —Å–ø–æ—Å—ñ–±):
                                    * —Å–ø–æ—Å—ñ–± 1: –ó–Ω–∞–π–¥—ñ—Ç—å —ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –≤–ª–∞—Å–Ω–∏–π —Ñ–∞–π–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∑ –≤–∞—à–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–ø'—é—Ç–µ—Ä–∞.
                                    * –°–ø–æ—Å—ñ–± 2: –í–≤–µ–¥—ñ—Ç—å URL-–∞–¥—Ä–µ—Å—É –¥–æ–∫—É–º–µ–Ω—Ç–∞ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ.
                                    
                                    (**–¥–æ–ø–æ–º—ñ–∂–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏**: `.pdf`, `.docx`, `.csv`, `.txt`)
                                3. –ü–æ—á–Ω—ñ—Ç—å –∑–∞–¥–∞–≤–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è!
                                4. –ë—ñ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π (https://github.com/Lin-jun-xiang/docGPT-streamlit)
                                5. –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, –Ω–µ —Å–æ—Ä–æ–º—Ç–µ—Å—è –∑–∞–ª–∏—à–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Ç–∞ –±—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å —É –¥–∏—Å–∫—É—Å—ñ—è—Ö.(https://github.com/Lin-jun-xiang/docGPT-streamlit/issues
                """
            )

    with st.sidebar:
        if st.session_state.openai_api_key:
            OPENAI_API_KEY = st.session_state.openai_api_key
            st.sidebar.success('API key loaded form previous input')
        else:
            OPENAI_API_KEY = st.sidebar.text_input(
                label='#### –¢–≤—ñ–π OpenAI API –∫–ª—é—á üëá',
                placeholder="sk-...",
                type="password",
                key='OPENAI_API_KEY'
            )
            st.session_state.openai_api_key = OPENAI_API_KEY

        os.environ['OPENAI_API_KEY'] = OPENAI_API_KEY

    with st.sidebar:
        if st.session_state.serpapi_api_key:
            SERPAPI_API_KEY = st.session_state.serpapi_api_key
            st.sidebar.success('API key loaded form previous input')
        else:
            SERPAPI_API_KEY = st.sidebar.text_input(
                label='#### –¢–≤—ñ–π SERPAPI API –∫–ª—é—á üëá',
                placeholder="...",
                type="password",
                key='SERPAPI_API_KEY'
            )
            st.session_state.serpapi_api_key = SERPAPI_API_KEY

        os.environ['SERPAPI_API_KEY'] = SERPAPI_API_KEY

    with st.sidebar:
        gpt4free = GPT4Free()
        st.session_state.g4f_provider = st.selectbox(
            (
                "#### –í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞, —è–∫—â–æ —Ö–æ—á–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ—é –º–æ–¥–µ–ª–ª—é. "
                "([–î–æ–∫–ª–∞–¥–Ω–æ](https://github.com/xtekky/gpt4free#models))"
            ),
            (['BestProvider'] + list(gpt4free.providers_table.keys()))
        )

        st.session_state.button_clicked = st.button(
            'Show Available Providers',
            help='Click to test which providers are currently available.',
            type='primary'
        )
        if st.session_state.button_clicked:
            available_providers = asyncio.run(gpt4free.show_available_providers())
            st.session_state.query.append('What are the available providers right now?')
            st.session_state.response.append(
                'The current available providers are:\n'
                f'{available_providers}'
            )
